name: Run PR tests
on: pull_request

jobs:
  python_tests:
    name: Run PR tests
    runs-on: ubuntu-latest
    env:
      ACTIONS_ALLOW_UNSECURE_COMMANDS: true
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: install build-essentials
        run: sudo apt-get -y install build-essential

      - name: pyenv install
        uses: "gabrielfalcao/pyenv-action@v5"
        with:
          command: pyenv install

      - name: pip install
        run: |
          set -e
          pip install --upgrade pip
          pip install wheel
          pip install -r requirements.txt
          pip install -r requirements-dev.txt

      - name: pytest
        run: |
          pytest tests/

      - name: mypy
        run: |
          mypy app.py

      - name: pylint
        run: |
          pylint app.py

      - name: run backtesting strategies
        run: |
          set -e
          echo BuyMoonSellRecoveryStrategy.yaml
          python app.py -c tests/BuyMoonSellRecoveryStrategy.yaml -m backtesting -s tests/fake.yaml |tail | tee result.txt
          grep 'wins:4 losses:3 stales:0 holds:0' result.txt

          echo BuyOnGrowthTrendAfterDropStrategy.yaml
          python app.py -c tests/BuyOnGrowthTrendAfterDropStrategy.yaml -m backtesting -s tests/fake.yaml | tail | tee result.txt
          grep ' wins:0 losses:0 stales:5 holds:0' result.txt

          echo BuyDropSellRecoveryStrategy.yaml
          python app.py -c tests/BuyDropSellRecoveryStrategy.yaml -m backtesting -s tests/fake.yaml | tail | tee result.txt
          grep 'wins:0 losses:0 stales:2 holds:0' result.txt

          echo BuyDropSellRecoveryStrategyWhenBTCisUp.yaml
          python app.py -c tests/BuyDropSellRecoveryStrategyWhenBTCisUp.yaml -m backtesting -s tests/fake.yaml | tail |tee result.txt
          grep 'wins:2 losses:0 stales:62 holds:0' result.txt

          echo BuyDropSellRecoveryStrategyWhenBTCisDown.yaml
          python app.py -c tests/BuyDropSellRecoveryStrategyWhenBTCisDown.yaml -m backtesting -s tests/fake.yaml | tail | tee result.txt
          grep 'wins:0 losses:0 stales:23 holds:0' result.txt

          echo BuyOnRecoveryAfterDropDuringGrowthTrendStrategy.yaml
          python app.py -c tests/BuyOnRecoveryAfterDropDuringGrowthTrendStrategy.yaml -m backtesting -s tests/fake.yaml | tail | tee result.txt
          grep 'wins:1 losses:0 stales:33 holds:0' result.txt

          echo BuyOnRecoveryAfterDropFromAverageStrategy.yaml
          python app.py -c tests/BuyOnRecoveryAfterDropFromAverageStrategy.yaml -m backtesting -s tests/fake.yaml | tail | tee result.txt
          grep 'wins:6 losses:2 stales:78 holds:0' result.txt

  docker_build_tests:
    name: Run docker-compose build tests tests
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: local docker-compose build
        run: |
          set -e
          pip install docker-compose
          docker-compose build
